{"version":3,"file":"static/js/29.dc86c3d2.chunk.js","mappings":"iOAKA,MAAMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kIAOtBC,EAAcJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oHAOvBI,EAAWP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4LAarBM,EAAaT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yEAMvBQ,EAAaX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wQA6D7B,EA5CsBU,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,IAAaC,EAAAA,EAAAA,MACdC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAC,GAStC,OAPAC,EAAAA,EAAAA,WAAU,MACRC,EAAAA,EAAAA,GAAWN,GAAUO,KAAMC,IAEzBL,EAAUK,MAEX,CAACR,IAECE,EAAOF,UAEVS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC1B,EAAS,CAAA4B,SAAA,EACRC,EAAAA,EAAAA,KAACxB,EAAW,CAAAuB,SAAET,EAAOW,SACrBJ,EAAAA,EAAAA,MAAClB,EAAQ,CAAAoB,SAAA,EACPF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAAa,IAAqB,IAAnBT,EAAOY,SAAiB,yBAEjDL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAAa,IAAET,EAAOa,UAAUC,MAAM,EAAG,QAEnDP,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAY,IAAkB,IAAhBT,EAAOe,MAAc,sBAG/CL,EAAAA,EAAAA,KAACnB,EAAU,CAAAkB,SAAET,EAAOgB,cAGtBN,EAAAA,EAAAA,KAACjB,EAAU,CAAAgB,UACTC,EAAAA,EAAAA,KAAA,QACEO,QAASA,KACPrB,GAAU,IACVa,SACH,mCAxBsBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0C,kEChEnC,MAAMS,EAAS,GAAAC,OAAMC,EAAAA,GAAe,eAGvBC,EAAaC,UACxB,IACE,MAAMC,EAAQC,aAAaC,QAAQ,eAOnC,aANkBC,EAAAA,EAAMC,IAAI,GAADR,OAAID,GAAa,CAC1CU,QAAS,CACPC,cAAc,UAADV,OAAYI,IAE3BO,iBAAiB,KAERxB,IACb,CAAE,MAAOyB,GAEP,OADAC,QAAQC,MAAM,oBAAqBF,GAC5B,CAAE/B,OAAQ,GACnB,GAIWI,EAAakB,UACxB,IAEE,aADkBI,EAAAA,EAAMC,IAAI,GAADR,OAAID,EAAS,KAAAC,OAAIrB,KACjCQ,IACb,CAAE,MAAOyB,GAEP,OADAC,QAAQC,MAAM,oBAAqBF,GAC5B,CAAEzB,KAAM,CAAC,EAClB,E","sources":["pages/cs/NoticeContent.jsx","api/notice/noticeApi.js"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { noticeCont } from '../../api/notice/noticeApi'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst NoticeBox = styled.div`\r\n  background-color: white;\r\n  border-radius: 0.5rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n`\r\n\r\nconst NoticeTitle = styled.h3`\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e5e7eb;\r\n`\r\n\r\nconst MetaInfo = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 1rem;\r\n  font-size: 0.875rem;\r\n  color: #4b5563;\r\n  margin-top: 1rem;\r\n\r\n  strong {\r\n    color: #1f2937;\r\n  }\r\n`\r\n\r\nconst NoticeCont = styled.div`\r\n  margin-top: 1.5rem;\r\n  line-height: 1.8;\r\n  color: #1f2937;\r\n`\r\n\r\nconst BackButton = styled.div`\r\n  margin-top: 2.5rem;\r\n  text-align: center;\r\n\r\n  span {\r\n    background-color: #3f82ff;\r\n    color: white;\r\n    padding: 0.5rem 1.5rem;\r\n    border-radius: 6px;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      background-color: #206eff;\r\n    }\r\n  }\r\n`\r\n\r\nconst NoticeContent = () => {\r\n  const navigate = useNavigate()\r\n  const { noticeId } = useParams()\r\n  const [notice, setNotice] = useState({})\r\n\r\n  useEffect(() => {\r\n    noticeCont(noticeId).then((data) => {\r\n      // console.log('data=', data)\r\n      setNotice(data)\r\n    })\r\n  }, [noticeId])\r\n\r\n  if (!notice.noticeId) return <h2>공지내용 없음</h2>\r\n  return (\r\n    <>\r\n      <NoticeBox>\r\n        <NoticeTitle>{notice.title}</NoticeTitle>\r\n        <MetaInfo>\r\n          <div>\r\n            <strong>작성자:</strong> {notice.adminId === 1 && '관리자'}\r\n          </div>\r\n          <div>\r\n            <strong>작성일:</strong> {notice.createdAt.slice(0, 10)}\r\n          </div>\r\n          <div>\r\n            <strong>종류:</strong> {notice.type === 1 && '일반'}\r\n          </div>\r\n        </MetaInfo>\r\n        <NoticeCont>{notice.content}</NoticeCont>\r\n      </NoticeBox>\r\n\r\n      <BackButton>\r\n        <span\r\n          onClick={() => {\r\n            navigate(-1)\r\n          }}\r\n        >\r\n          목록보기\r\n        </span>\r\n      </BackButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeContent\r\n","import axios from 'axios'\r\nimport { API_SERVER_HOST } from '../books/bookApi' //'http://localhost:8080'\r\n\r\nconst uriNotice = `${API_SERVER_HOST}/api/notice`\r\n\r\n//공지목록\r\nexport const noticeList = async () => {\r\n  try {\r\n    const token = localStorage.getItem('accessToken') // 저장 방식에 따라 다름\r\n    const res = await axios.get(`${uriNotice}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      withCredentials: true, // 토큰도 같이 전송하려면 필요\r\n    })\r\n    return res.data\r\n  } catch (err) {\r\n    console.error('noticeList error:', err)\r\n    return { notice: [] }\r\n  }\r\n}\r\n\r\n//개별공지글\r\nexport const noticeCont = async (noticeId) => {\r\n  try {\r\n    const res = await axios.get(`${uriNotice}/${noticeId}`)\r\n    return res.data\r\n  } catch (err) {\r\n    console.error('noticeCont error:', err)\r\n    return { data: {} }\r\n  }\r\n}\r\n"],"names":["NoticeBox","styled","div","_templateObject","_taggedTemplateLiteral","NoticeTitle","h3","_templateObject2","MetaInfo","_templateObject3","NoticeCont","_templateObject4","BackButton","_templateObject5","NoticeContent","navigate","useNavigate","noticeId","useParams","notice","setNotice","useState","useEffect","noticeCont","then","data","_jsxs","_Fragment","children","_jsx","title","adminId","createdAt","slice","type","content","onClick","uriNotice","concat","API_SERVER_HOST","noticeList","async","token","localStorage","getItem","axios","get","headers","Authorization","withCredentials","err","console","error"],"sourceRoot":""}