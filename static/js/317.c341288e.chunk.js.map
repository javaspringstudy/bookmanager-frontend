{"version":3,"file":"static/js/317.c341288e.chunk.js","mappings":"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","sources":["pages/books/SearchPage.jsx","components/common/Pagination.jsx","hooks/useCustomMove.js","components/common/NoContent.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { searchBook } from '../../api/books/bookApi'\r\nimport Pagination from '../../components/common/Pagination'\r\nimport useCustomMove from '../../hooks/useCustomMove'\r\nimport NoContent from '../../components/common/NoContent'\r\n\r\nconst initData = [\r\n  {\r\n    id: 1,\r\n    title: '어린왕자의 철학',\r\n    author: '정철',\r\n    publisher: '철학의숲',\r\n    img: 'https://picsum.photos/seed/1/200/280',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '다시 만난 어린왕자',\r\n    author: '김민정',\r\n    publisher: '문학사랑',\r\n    img: 'https://picsum.photos/seed/2/200/280',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '어린왕자와 함께하는 하루',\r\n    author: '이준',\r\n    publisher: '하루북스',\r\n    img: 'https://picsum.photos/seed/3/200/280',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '어린왕자의 편지',\r\n    author: '송지현',\r\n    publisher: '편지출판',\r\n    img: 'https://picsum.photos/seed/4/200/280',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: '어린왕자와 떠나는 여행',\r\n    author: '홍길동',\r\n    publisher: '여행의길',\r\n    img: 'https://picsum.photos/seed/5/200/280',\r\n  },\r\n  {\r\n    id: 6,\r\n    title: '어린왕자의 지구일기',\r\n    author: '박은영',\r\n    publisher: '별책출판',\r\n    img: 'https://picsum.photos/seed/6/200/280',\r\n  },\r\n  {\r\n    id: 7,\r\n    title: '어린왕자 그리고 장미',\r\n    author: '최성훈',\r\n    publisher: '플로라북스',\r\n    img: 'https://picsum.photos/seed/7/200/280',\r\n  },\r\n  {\r\n    id: 8,\r\n    title: '어린왕자, 별을 걷다',\r\n    author: '이아름',\r\n    publisher: '은하수출판사',\r\n    img: 'https://picsum.photos/seed/8/200/280',\r\n  },\r\n]\r\n\r\nconst ArticleContainer = styled.article`\r\n  margin-top: 48px;\r\n  .title {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .highlight {\r\n    color: #2563eb;\r\n  }\r\n`\r\n\r\nconst BookGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(180px, 1fr));\r\n  gap: 48px 96px;\r\n`\r\n\r\nconst BookCard = styled.div`\r\n  background-color: white;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  transition: all 0.1s;\r\n  &:hover {\r\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);\r\n    transform: translate(1px, 1px);\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    aspect-ratio: 3 / 4;\r\n    object-fit: cover;\r\n    border-radius: 4px;\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 6px;\r\n  }\r\n\r\n  p {\r\n    font-size: 0.875rem;\r\n    color: #555;\r\n  }\r\n`\r\n\r\nconst SearchPage = () => {\r\n  const [searchParams] = useSearchParams()\r\n  const type = searchParams.get('type')\r\n  const keyword = searchParams.get('keyword')\r\n\r\n  // const [books, setBooks] = useState([])\r\n  const [serverData, setServerData] = useState({ books: [] })\r\n  const { moveToList, moveToRead, page, size, refresh } = useCustomMove()\r\n\r\n  useEffect(() => {\r\n    if (!keyword) return\r\n    const params = { type, keyword }\r\n\r\n    //서버요청\r\n    searchBook(params).then((data) => {\r\n      // setBooks(data.books)\r\n      setServerData(data)\r\n    })\r\n  }, [type, keyword])\r\n\r\n  useEffect(() => {\r\n    // console.log('북스=', serverData.books)\r\n  }, [serverData])\r\n\r\n  const navigate = useNavigate()\r\n  const queryString = createSearchParams({ page, size }).toString()\r\n\r\n  if (serverData.books.length < 1)\r\n    return (\r\n      <ArticleContainer>\r\n        <NoContent msg={`${keyword} 키워드로 검색된 도서가 없습니다.`} />\r\n      </ArticleContainer>\r\n    )\r\n  return (\r\n    <ArticleContainer>\r\n      <BookGrid>\r\n        {serverData.books.map((book) => (\r\n          <BookCard\r\n            key={book.bookId}\r\n            onClick={() =>\r\n              navigate({\r\n                pathname: `../${book.bookId}`,\r\n                search: queryString,\r\n              })\r\n            }\r\n          >\r\n            <img src={book.cover} alt={book.title} />\r\n            <h3>{book.title}</h3>\r\n            <p>\r\n              {book.author} | {book.publisher}\r\n            </p>\r\n          </BookCard>\r\n        ))}\r\n      </BookGrid>\r\n\r\n      <Pagination serverData={serverData} movePage={moveToList} />\r\n    </ArticleContainer>\r\n  )\r\n}\r\n\r\nexport default SearchPage\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  margin-top: 32px;\r\n\r\n  button {\r\n    padding: 8px 14px;\r\n    background-color: white;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n\r\n    &:first-child {\r\n      color: white !important;\r\n      font-weight: bold;\r\n      background-color: #3b82f6;\r\n    }\r\n\r\n    &:hover {\r\n      color: white !important;\r\n      background-color: #3b82f6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Pagination = ({ serverData, movePage }) => {\r\n  // console.log('serverData=', serverData)\r\n  let { page, size, totalCount, totalPages } = serverData\r\n\r\n  let endPage = Math.ceil((page + 1) / 10) * 10 // 페이지네이션 끝번호\r\n  const startPage = endPage - 10 + 1 // 페이지네이션 시작번호\r\n  const realEndPage = Math.ceil(totalCount / size)\r\n\r\n  // 페이지네이션 끝번호 재계산\r\n  if (realEndPage < endPage) {\r\n    endPage = realEndPage\r\n  }\r\n\r\n  const pageNumList = []\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageNumList[i - 1] = i\r\n  }\r\n\r\n  const prev = startPage > 10 ? true : false\r\n  const next = endPage < realEndPage ? true : false\r\n\r\n  return (\r\n    <Container>\r\n      {prev ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: startPage - 1,\r\n              size,\r\n            })\r\n          }\r\n        >\r\n          Prev\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {pageNumList.map((pageNum, idx) => (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => movePage({ page: pageNum, size })}\r\n          key={idx}\r\n          style={{\r\n            color: `${page + 1 === pageNum ? 'red' : 'black'}`,\r\n          }}\r\n        >\r\n          {pageNum}\r\n        </button>\r\n      ))}\r\n\r\n      {next ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: endPage + 1,\r\n              size: size,\r\n            })\r\n          }\r\n        >\r\n          Next\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import { useState } from 'react'\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from 'react-router-dom'\r\n\r\nconst useCustomMove = () => {\r\n  //문자열을 정수로 변환\r\n  const getNum = (strNum, defaultValue) => {\r\n    if (!strNum) return defaultValue\r\n    return parseInt(strNum)\r\n  }\r\n\r\n  const [searchParam] = useSearchParams()\r\n  const page = getNum(searchParam.get('page'), 1)\r\n  const size = getNum(searchParam.get('size'), 10)\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n  const navigate = useNavigate()\r\n  let queryString = ''\r\n\r\n  //현재페이지번호를 클릭해도 서버에 데이터를 요청하기 위한 상태변수\r\n  const [setRefresh] = useState(false)\r\n\r\n  const moveToList = (pageParam) => {\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n      queryString = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString()\r\n    } else {\r\n      navigate({ pathname: '../search' })\r\n      //../search는 현재 경로에서 한 디렉터리 위로 올라간 다음 list로 이동하는 의미. 결과: /books/search\r\n    }\r\n    setRefresh((prev) => !prev)\r\n    navigate({ pathname: '../search', search: queryString })\r\n  }\r\n\r\n  const moveToRead = (bookId) => {\r\n    navigate({ pathname: `../info/${bookId}`, search: queryDefault })\r\n  }\r\n\r\n  // console.log('page=', page)\r\n  // console.log('size=', size)\r\n\r\n  return { moveToList, moveToRead, page, size }\r\n}\r\n\r\nexport default useCustomMove\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.article`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 64px;\r\n`\r\n\r\nconst NoContent = ({ msg }) => {\r\n  return (\r\n    <Container>\r\n      <h3>{msg}</h3>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NoContent\r\n"],"names":["ArticleContainer","styled","article","_templateObject","_taggedTemplateLiteral","BookGrid","div","_templateObject2","BookCard","_templateObject3","SearchPage","searchParams","useSearchParams","type","get","keyword","serverData","setServerData","useState","books","moveToList","moveToRead","page","size","refresh","useCustomMove","useEffect","params","searchBook","then","data","navigate","useNavigate","queryString","createSearchParams","toString","length","_jsx","children","NoContent","msg","concat","_jsxs","map","book","onClick","pathname","bookId","search","src","cover","alt","title","author","publisher","Pagination","movePage","Container","_ref","totalCount","totalPages","endPage","Math","ceil","startPage","realEndPage","pageNumList","i","prev","next","pageNum","idx","style","color","getNum","strNum","defaultValue","parseInt","searchParam","queryDefault","setRefresh","pageParam","sizeNum"],"sourceRoot":""}