{"version":3,"file":"static/js/650.b6848434.chunk.js","mappings":"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","sources":["hooks/useInputs.js","components/common/Modal.jsx","components/auth/Login.jsx","pages/auth/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\nconst useInputs = (initialData) => {\r\n  const [form, setForm] = useState(initialData)\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target\r\n    setForm((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const reset = () => {\r\n    setForm(initialData)\r\n  }\r\n\r\n  return [form, onChange, reset]\r\n}\r\n\r\nexport default useInputs\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst ModalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 99;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  ${(props) =>\r\n    props.$isOpen\r\n      ? ''\r\n      : css`\r\n          display: none;\r\n        `}\r\n\r\n  >section {\r\n    overflow: hidden;\r\n    width: 90%;\r\n    max-width: 450px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-radius: 0.3rem;\r\n    animation-duration: 0.25s;\r\n    animation-timing-function: ease-out;\r\n    animation-name: slideUp;\r\n    animation-fill-mode: forwards;\r\n\r\n    > header {\r\n      position: relative;\r\n      padding: 16px 64px;\r\n      background-color: #f1f1f1;\r\n      font-weight: 700;\r\n    }\r\n\r\n    > main {\r\n      padding: 16px;\r\n      border-bottom: 1px solid #dee2e6;\r\n      border-top: 1px solid #dee2e6;\r\n    }\r\n\r\n    > footer {\r\n      padding: 12px 16px;\r\n      text-align: right;\r\n\r\n      > button {\r\n        outline: none;\r\n        cursor: pointer;\r\n        border: 0;\r\n        margin: 0 auto;\r\n        padding: 6px 12px;\r\n        color: #fff;\r\n        background-color: #6c757d;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    outline: none;\r\n    cursor: pointer;\r\n    border: 0;\r\n  }\r\n`\r\n\r\nconst Modal = (props) => {\r\n  const { isOpen, clseModalFn, title, children } = props\r\n  return (\r\n    <ModalContainer $isOpen={isOpen}>\r\n      <section>\r\n        <header>{title}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          <button onClick={clseModalFn}>close</button>\r\n        </footer>\r\n      </section>\r\n    </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import styled from 'styled-components'\r\nimport useInputs from '../../hooks/useInputs'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../../slices/loginSlice'\r\nimport { Link } from 'react-router-dom'\r\nimport useCustomLogin from '../../hooks/useCustomLogin'\r\nimport Modal from '../common/Modal'\r\nimport { useRef, useState } from 'react'\r\n\r\nconst Container = styled.main`\r\n  max-width: 640px;\r\n  margin: 0 auto;\r\n  padding: 64px 16px;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Form = styled.div`\r\n  background: white;\r\n  padding: 32px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n\r\n  > button {\r\n    width: 100%;\r\n    background-color: #2563eb;\r\n    color: white;\r\n    padding: 12px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: #1d4ed8;\r\n    }\r\n  }\r\n`\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 24px;\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 8px 12px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n`\r\n\r\nconst ActionLinks = styled.div`\r\n  text-align: right;\r\n  font-size: 14px;\r\n  color: #2563eb;\r\n  margin-top: 12px;\r\n\r\n  a {\r\n    margin-left: 16px;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`\r\n\r\nconst initState = {\r\n  email: '',\r\n  pw: '',\r\n}\r\n\r\nconst Login = () => {\r\n  const [modalAgain, setModalAgain] = useState(false) //모달창 열고 닫는 변수\r\n  const [loginParam, onChange, reset] = useInputs(initState)\r\n  const { doLogin, moveToPath } = useCustomLogin()\r\n  const dispatch = useDispatch()\r\n\r\n  const { email, pw } = loginParam\r\n\r\n  const handleClickLogin = () => {\r\n    doLogin(loginParam).then((res) => {\r\n      console.log('res=', res)\r\n\r\n      // if (res.error) {\r\n      if (res === undefined) {\r\n        setModalAgain(true)\r\n        reset()\r\n      } else {\r\n        if (res.accessToken) {\r\n          dispatch(login(res))\r\n        }\r\n\r\n        moveToPath('/')\r\n      }\r\n    })\r\n  }\r\n\r\n  const clseModalAgainFn = () => {\r\n    setModalAgain(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title>🔐 회원 로그인</Title>\r\n        <Form>\r\n          <FormGroup>\r\n            <label>이메일</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n              placeholder=\"이메일를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <label>비밀번호</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"pw\"\r\n              value={pw}\r\n              onChange={onChange}\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n          <button onClick={handleClickLogin}>로그인</button>\r\n          <ActionLinks>\r\n            <Link to={''}>비밀번호 찾기</Link>\r\n            <Link to={''}>회원가입</Link>\r\n          </ActionLinks>\r\n        </Form>\r\n      </Container>\r\n\r\n      <Modal\r\n        isOpen={modalAgain}\r\n        clseModalFn={clseModalAgainFn}\r\n        title=\"로그인 실패\"\r\n      >\r\n        입력하신 이메일 또는 비밀번호가 올바르지 않습니다.\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import Login from '../../components/auth/Login'\r\n\r\nconst LoginPage = () => {\r\n  return <Login />\r\n}\r\n\r\nexport default LoginPage\r\n"],"names":["initialData","form","setForm","useState","e","name","value","target","prev","_objectSpread","reset","ModalContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","$isOpen","css","_templateObject2","isOpen","clseModalFn","title","children","_jsx","_jsxs","onClick","Container","main","Title","h2","Form","_templateObject3","FormGroup","_templateObject4","ActionLinks","_templateObject5","initState","email","pw","Login","modalAgain","setModalAgain","loginParam","onChange","useInputs","doLogin","moveToPath","useCustomLogin","dispatch","useDispatch","_Fragment","type","placeholder","handleClickLogin","then","res","console","log","undefined","accessToken","login","Link","to","Modal","clseModalAgainFn","LoginPage"],"sourceRoot":""}