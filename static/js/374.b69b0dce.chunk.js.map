{"version":3,"file":"static/js/374.b69b0dce.chunk.js","mappings":"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","sources":["hooks/useInputs.js","components/common/Modal.jsx","components/common/Pagination.jsx","hooks/useCustomMove.js","pages/rental/SearchForm.jsx","components/rental/BreadCrumb.jsx","pages/rental/IndexPage.jsx","pages/rental/RentalList.jsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\nconst useInputs = (initialData) => {\r\n  const [form, setForm] = useState(initialData)\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target\r\n    setForm((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const reset = () => {\r\n    setForm(initialData)\r\n  }\r\n\r\n  return [form, onChange, reset]\r\n}\r\n\r\nexport default useInputs\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst ModalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 99;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  ${(props) =>\r\n    props.$isOpen\r\n      ? ''\r\n      : css`\r\n          display: none;\r\n        `}\r\n\r\n  >section {\r\n    overflow: hidden;\r\n    width: 90%;\r\n    max-width: 450px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-radius: 0.3rem;\r\n    animation-duration: 0.25s;\r\n    animation-timing-function: ease-out;\r\n    animation-name: slideUp;\r\n    animation-fill-mode: forwards;\r\n\r\n    > header {\r\n      position: relative;\r\n      padding: 16px 64px;\r\n      background-color: #f1f1f1;\r\n      font-weight: 700;\r\n    }\r\n\r\n    > main {\r\n      padding: 16px;\r\n      border-bottom: 1px solid #dee2e6;\r\n      border-top: 1px solid #dee2e6;\r\n    }\r\n\r\n    > footer {\r\n      padding: 12px 16px;\r\n      text-align: right;\r\n\r\n      > button {\r\n        outline: none;\r\n        cursor: pointer;\r\n        border: 0;\r\n        margin: 0 auto;\r\n        padding: 6px 12px;\r\n        color: #fff;\r\n        background-color: #6c757d;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    outline: none;\r\n    cursor: pointer;\r\n    border: 0;\r\n  }\r\n`\r\n\r\nconst Modal = (props) => {\r\n  const { isOpen, clseModalFn, title, children } = props\r\n  return (\r\n    <ModalContainer $isOpen={isOpen}>\r\n      <section>\r\n        <header>{title}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          <button onClick={clseModalFn}>close</button>\r\n        </footer>\r\n      </section>\r\n    </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  margin-top: 32px;\r\n\r\n  button {\r\n    padding: 8px 14px;\r\n    background-color: white;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n\r\n    &:first-child {\r\n      color: white !important;\r\n      font-weight: bold;\r\n      background-color: #3b82f6;\r\n    }\r\n\r\n    &:hover {\r\n      color: white !important;\r\n      background-color: #3b82f6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Pagination = ({ serverData, movePage }) => {\r\n  // console.log('serverData=', serverData)\r\n  let { page, size, totalCount, totalPages } = serverData\r\n\r\n  let endPage = Math.ceil((page + 1) / 10) * 10 // 페이지네이션 끝번호\r\n  const startPage = endPage - 10 + 1 // 페이지네이션 시작번호\r\n  const realEndPage = Math.ceil(totalCount / size)\r\n\r\n  // 페이지네이션 끝번호 재계산\r\n  if (realEndPage < endPage) {\r\n    endPage = realEndPage\r\n  }\r\n\r\n  const pageNumList = []\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageNumList[i - 1] = i\r\n  }\r\n\r\n  const prev = startPage > 10 ? true : false\r\n  const next = endPage < realEndPage ? true : false\r\n\r\n  return (\r\n    <Container>\r\n      {prev ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: startPage - 1,\r\n              size,\r\n            })\r\n          }\r\n        >\r\n          Prev\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {pageNumList.map((pageNum, idx) => (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => movePage({ page: pageNum, size })}\r\n          key={idx}\r\n          style={{\r\n            color: `${page + 1 === pageNum ? 'red' : 'black'}`,\r\n          }}\r\n        >\r\n          {pageNum}\r\n        </button>\r\n      ))}\r\n\r\n      {next ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: endPage + 1,\r\n              size: size,\r\n            })\r\n          }\r\n        >\r\n          Next\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import { useState } from 'react'\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from 'react-router-dom'\r\n\r\nconst useCustomMove = () => {\r\n  //문자열을 정수로 변환\r\n  const getNum = (strNum, defaultValue) => {\r\n    if (!strNum) return defaultValue\r\n    return parseInt(strNum)\r\n  }\r\n\r\n  const [searchParam] = useSearchParams()\r\n  const page = getNum(searchParam.get('page'), 1)\r\n  const size = getNum(searchParam.get('size'), 10)\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n  const navigate = useNavigate()\r\n  let queryString = ''\r\n\r\n  //현재페이지번호를 클릭해도 서버에 데이터를 요청하기 위한 상태변수\r\n  const [setRefresh] = useState(false)\r\n\r\n  const moveToList = (pageParam) => {\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n      queryString = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString()\r\n    } else {\r\n      navigate({ pathname: '../search' })\r\n      //../search는 현재 경로에서 한 디렉터리 위로 올라간 다음 list로 이동하는 의미. 결과: /books/search\r\n    }\r\n    setRefresh((prev) => !prev)\r\n    navigate({ pathname: '../search', search: queryString })\r\n  }\r\n\r\n  const moveToRead = (bookId) => {\r\n    navigate({ pathname: `../info/${bookId}`, search: queryDefault })\r\n  }\r\n\r\n  // console.log('page=', page)\r\n  // console.log('size=', size)\r\n\r\n  return { moveToList, moveToRead, page, size }\r\n}\r\n\r\nexport default useCustomMove\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport useInputs from '../../hooks/useInputs'\r\n\r\nimport { createSearchParams, useNavigate } from 'react-router-dom'\r\nimport Modal from '../../components/common/Modal'\r\n\r\nconst FormContainer = styled.div`\r\n  background-color: white;\r\n  padding: 16px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\r\n  > form {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n\r\n    > select {\r\n      padding: 8px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    > input {\r\n      flex: 1;\r\n      padding: 8px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    > button {\r\n      padding: 8px 16px;\r\n      background-color: #3b82f6;\r\n      border: none;\r\n      color: white;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: #2563eb;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst SearchForm = () => {\r\n  const navigate = useNavigate()\r\n  const [form, onChange, reset] = useInputs({\r\n    type: 'title',\r\n    keyword: '',\r\n  })\r\n\r\n  const { type, keyword } = form\r\n\r\n  useEffect(() => {\r\n    //React는 상태를 비동기적으로 처리하기 때문에 로그확인은 useEffect에서 하는게 정확하다.\r\n    //console.log('form =', form)\r\n  }, [form])\r\n\r\n  const keywordRef = useRef()\r\n  const [isOpen, setIsOpen] = useState(false) //모달창 열고 닫는 변수\r\n\r\n  const clseModalFn = () => {\r\n    setIsOpen(false)\r\n    keywordRef.current.focus()\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!keyword.trim()) {\r\n      // alert('검색어가 입력되지 않았습니다.')\r\n      setIsOpen(true) //모달창 열기\r\n\r\n      keywordRef.current.focus()\r\n      return\r\n    }\r\n\r\n    const queryString = createSearchParams({ type, keyword }).toString()\r\n    console.log(`queryString = ${queryString}`)\r\n    navigate(`/searchbook?${queryString}`)\r\n\r\n    reset()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} clseModalFn={clseModalFn} title=\"입력오류\">\r\n        검색어가 입력되지 않았습니다.\r\n      </Modal>\r\n      <FormContainer>\r\n        <form onSubmit={onSubmit}>\r\n          <select name=\"type\" onChange={onChange} value={type}>\r\n            <option value=\"title\">도서명</option>\r\n            <option value=\"author\">저자명</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            name=\"keyword\"\r\n            value={keyword}\r\n            placeholder=\"검색어를 입력하세요\"\r\n            onChange={onChange}\r\n            ref={keywordRef}\r\n            autoComplete=\"off\"\r\n          />\r\n          <button>검색</button>\r\n        </form>\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import { Link, NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst Menu = styled.article`\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n\r\n  > a {\r\n    width: 100px;\r\n    padding: 6px 0;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: ${(props) => (props.active ? '600' : '400')};\r\n    background-color: ${(props) => (props.active ? '#2563eb' : 'transparent')};\r\n    color: ${(props) => (props.active ? '#fff' : '#000')};\r\n    text-decoration: none;\r\n    text-align: center;\r\n\r\n    &:hover,\r\n    &.on {\r\n      background-color: #2563eb;\r\n      color: white;\r\n    }\r\n  }\r\n`\r\n\r\nconst BreadCrumb = () => {\r\n  return (\r\n    <Menu>\r\n      <NavLink\r\n        to={'list'}\r\n        className={({ isActive }) => (isActive ? 'on' : undefined)}\r\n      >\r\n        📄 대여목록\r\n      </NavLink>\r\n      <NavLink\r\n        to={'over'}\r\n        className={({ isActive }) => (isActive ? 'on' : undefined)}\r\n      >\r\n        ⏰ 미납도서\r\n      </NavLink>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default BreadCrumb\r\n","import styled from 'styled-components'\r\nimport RentalList from './RentalList'\r\nimport SearchForm from './SearchForm'\r\nimport { useState } from 'react'\r\nimport BreadCrumb from '../../components/rental/BreadCrumb'\r\nimport { Outlet } from 'react-router-dom'\r\nimport useCustomLogin from '../../hooks/useCustomLogin'\r\n\r\nconst rentals = [\r\n  {\r\n    title: '어린왕자',\r\n    author: '생텍쥐페리',\r\n    rentDate: '2025-06-10',\r\n    returnDate: '2025-06-24',\r\n    status: '대여요청',\r\n  },\r\n  {\r\n    title: '자바의 정석',\r\n    author: '남궁성',\r\n    rentDate: '2025-05-01',\r\n    returnDate: '2025-05-15',\r\n    status: '반납완료',\r\n  },\r\n  {\r\n    title: '클린 코드',\r\n    author: '로버트 마틴',\r\n    rentDate: '2025-06-01',\r\n    returnDate: '2025-06-15',\r\n    status: '미납',\r\n  },\r\n  {\r\n    title: '이펙티브 자바',\r\n    author: '조슈아 블로크',\r\n    rentDate: '2025-06-12',\r\n    returnDate: '2025-06-26',\r\n    status: '대여중',\r\n  },\r\n  {\r\n    title: '토비의 스프링',\r\n    author: '이일민',\r\n    rentDate: '2025-05-20',\r\n    returnDate: '2025-06-03',\r\n    status: '반납완료',\r\n  },\r\n  {\r\n    title: 'HTML+CSS 디자인',\r\n    author: '고경희',\r\n    rentDate: '2025-06-05',\r\n    returnDate: '2025-06-19',\r\n    status: '대여중',\r\n  },\r\n  {\r\n    title: '리팩토링',\r\n    author: '마틴 파울러',\r\n    rentDate: '2025-05-10',\r\n    returnDate: '2025-05-24',\r\n    status: '반납완료',\r\n  },\r\n  {\r\n    title: '모던 자바스크립트',\r\n    author: '이호준',\r\n    rentDate: '2025-06-01',\r\n    returnDate: '2025-06-15',\r\n    status: '미납',\r\n  },\r\n  {\r\n    title: '코딩 인터뷰 완전분석',\r\n    author: '게일 맥도웰',\r\n    rentDate: '2025-06-08',\r\n    returnDate: '2025-06-22',\r\n    status: '대여중',\r\n  },\r\n  {\r\n    title: '파이썬 완전정복',\r\n    author: '윤인성',\r\n    rentDate: '2025-05-15',\r\n    returnDate: '2025-05-29',\r\n    status: '반납완료',\r\n  },\r\n]\r\n\r\nconst RentalContainer = styled.section`\r\n  > h2 {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n\r\n    > span {\r\n      color: #3f82ff;\r\n    }\r\n  }\r\n`\r\n\r\nconst RentalState = () => {\r\n  const { isLogin, moveToLoginReturn } = useCustomLogin()\r\n\r\n  if (!isLogin) {\r\n    alert('로그인후 사용할 수 있습니다.')\r\n    return moveToLoginReturn()\r\n  }\r\n\r\n  return (\r\n    <RentalContainer>\r\n      <BreadCrumb />\r\n      <Outlet />\r\n    </RentalContainer>\r\n  )\r\n}\r\n\r\nexport default RentalState\r\n","import styled from 'styled-components'\r\nimport useCustomLogin from '../../hooks/useCustomLogin'\r\nimport { useEffect, useState } from 'react'\r\nimport useCustomMove from '../../hooks/useCustomMove'\r\nimport Pagination from '../../components/common/Pagination'\r\n\r\nconst RentalContainer = styled.div`\r\n  margin-top: 2rem;\r\n`\r\n\r\nconst FilterBox = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 1rem;\r\n\r\n  select {\r\n    padding: 0.5rem 1rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n`\r\n\r\nconst RentalTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n\r\n  thead {\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    text-align: left;\r\n  }\r\n\r\n  .text-red {\r\n    color: #ef4444;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .text-green {\r\n    color: #10b981;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .text-gray {\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst CancelButton = styled.button`\r\n  display: inline-block;\r\n  margin-left: 0.5rem;\r\n  background-color: #ef4444;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  font-size: 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dc2626;\r\n  }\r\n`\r\n\r\nconst RentalList = () => {\r\n  const { moveToList } = useCustomMove()\r\n  const [serverData, setServerData] = useState({ list: [] })\r\n\r\n  useEffect(() => {\r\n    //여기에서 비동기로 데이터를 받아올 수 있도록 코드를 작성해 주세요\r\n  }, [])\r\n\r\n  if (!serverData.list || serverData.list.length < 1) {\r\n    return <h2>대여 데이터가 없습니다.</h2>\r\n  }\r\n  return (\r\n    <RentalContainer>\r\n      <FilterBox>\r\n        <select>\r\n          <option value=\"\">전체보기</option>\r\n          <option value=\"대여요청\">대여요청</option>\r\n          <option value=\"대여중\">대여중</option>\r\n          <option value=\"반납완료\">반납완료</option>\r\n          <option value=\"미납\">미납</option>\r\n        </select>\r\n      </FilterBox>\r\n\r\n      <RentalTable>\r\n        <thead>\r\n          <tr>\r\n            <th>도서명</th>\r\n            <th>저자</th>\r\n            <th>대여일</th>\r\n            <th>반납예정일</th>\r\n            <th>상태</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {serverData.list.map((book, i) => (\r\n            <tr key={i}>\r\n              <td>{book.title}</td>\r\n              <td>{book.author}</td>\r\n              <td>{book.rentDate}</td>\r\n              <td>{book.returnDate}</td>\r\n              <td\r\n                className={\r\n                  book.status === '미납'\r\n                    ? 'text-red'\r\n                    : book.status === '대여중'\r\n                      ? 'text-green'\r\n                      : 'text-gray'\r\n                }\r\n              >\r\n                {book.status === '대여요청' ? (\r\n                  <>\r\n                    <span>{book.status}</span>\r\n                    <CancelButton>취소</CancelButton>\r\n                  </>\r\n                ) : (\r\n                  <span>{book.status}</span>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </RentalTable>\r\n\r\n      <Pagination serverData={serverData} movePage={moveToList} />\r\n    </RentalContainer>\r\n  )\r\n}\r\n\r\nexport default RentalList\r\n"],"names":["initialData","form","setForm","useState","e","name","value","target","prev","_objectSpread","reset","ModalContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","$isOpen","css","_templateObject2","isOpen","clseModalFn","title","children","_jsx","_jsxs","onClick","Container","_ref","serverData","movePage","page","size","totalCount","totalPages","endPage","Math","ceil","startPage","realEndPage","pageNumList","i","next","map","pageNum","idx","type","style","color","concat","useCustomMove","getNum","strNum","defaultValue","parseInt","searchParam","useSearchParams","get","queryDefault","createSearchParams","toString","navigate","useNavigate","queryString","setRefresh","moveToList","pageParam","sizeNum","pathname","search","moveToRead","bookId","Menu","article","active","BreadCrumb","NavLink","to","className","isActive","undefined","_ref2","RentalContainer","section","RentalState","isLogin","moveToLoginReturn","useCustomLogin","Outlet","alert","FilterBox","RentalTable","table","_templateObject3","CancelButton","button","_templateObject4","RentalList","setServerData","list","useEffect","length","book","author","rentDate","returnDate","status","_Fragment","Pagination"],"sourceRoot":""}