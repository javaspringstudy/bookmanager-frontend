{"version":3,"file":"static/js/262.a39b23cb.chunk.js","mappings":"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","sources":["components/common/Pagination.jsx","hooks/useCustomMove.js","pages/rental/OverdueList.jsx"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  margin-top: 32px;\r\n\r\n  button {\r\n    padding: 8px 14px;\r\n    background-color: white;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n\r\n    &:first-child {\r\n      color: white !important;\r\n      font-weight: bold;\r\n      background-color: #3b82f6;\r\n    }\r\n\r\n    &:hover {\r\n      color: white !important;\r\n      background-color: #3b82f6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Pagination = ({ serverData, movePage }) => {\r\n  // console.log('serverData=', serverData)\r\n  let { page, size, totalCount, totalPages } = serverData\r\n\r\n  let endPage = Math.ceil((page + 1) / 10) * 10 // 페이지네이션 끝번호\r\n  const startPage = endPage - 10 + 1 // 페이지네이션 시작번호\r\n  const realEndPage = Math.ceil(totalCount / size)\r\n\r\n  // 페이지네이션 끝번호 재계산\r\n  if (realEndPage < endPage) {\r\n    endPage = realEndPage\r\n  }\r\n\r\n  const pageNumList = []\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageNumList[i - 1] = i\r\n  }\r\n\r\n  const prev = startPage > 10 ? true : false\r\n  const next = endPage < realEndPage ? true : false\r\n\r\n  return (\r\n    <Container>\r\n      {prev ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: startPage - 1,\r\n              size,\r\n            })\r\n          }\r\n        >\r\n          Prev\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {pageNumList.map((pageNum, idx) => (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => movePage({ page: pageNum, size })}\r\n          key={idx}\r\n          style={{\r\n            color: `${page + 1 === pageNum ? 'red' : 'black'}`,\r\n          }}\r\n        >\r\n          {pageNum}\r\n        </button>\r\n      ))}\r\n\r\n      {next ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: endPage + 1,\r\n              size: size,\r\n            })\r\n          }\r\n        >\r\n          Next\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import { useState } from 'react'\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from 'react-router-dom'\r\n\r\nconst useCustomMove = () => {\r\n  //문자열을 정수로 변환\r\n  const getNum = (strNum, defaultValue) => {\r\n    if (!strNum) return defaultValue\r\n    return parseInt(strNum)\r\n  }\r\n\r\n  const [searchParam] = useSearchParams()\r\n  const page = getNum(searchParam.get('page'), 1)\r\n  const size = getNum(searchParam.get('size'), 10)\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n  const navigate = useNavigate()\r\n  let queryString = ''\r\n\r\n  //현재페이지번호를 클릭해도 서버에 데이터를 요청하기 위한 상태변수\r\n  const [setRefresh] = useState(false)\r\n\r\n  const moveToList = (pageParam) => {\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n      queryString = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString()\r\n    } else {\r\n      navigate({ pathname: '../search' })\r\n      //../search는 현재 경로에서 한 디렉터리 위로 올라간 다음 list로 이동하는 의미. 결과: /books/search\r\n    }\r\n    setRefresh((prev) => !prev)\r\n    navigate({ pathname: '../search', search: queryString })\r\n  }\r\n\r\n  const moveToRead = (bookId) => {\r\n    navigate({ pathname: `../info/${bookId}`, search: queryDefault })\r\n  }\r\n\r\n  // console.log('page=', page)\r\n  // console.log('size=', size)\r\n\r\n  return { moveToList, moveToRead, page, size }\r\n}\r\n\r\nexport default useCustomMove\r\n","import styled from 'styled-components'\r\nimport useCustomLogin from '../../hooks/useCustomLogin'\r\nimport { useEffect, useState } from 'react'\r\nimport useCustomMove from '../../hooks/useCustomMove'\r\nimport Pagination from '../../components/common/Pagination'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst OverdueContainer = styled.div`\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n  overflow: hidden;\r\n`\r\n\r\nconst OverdueTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n\r\n  thead {\r\n    background-color: #f3f4f6;\r\n\r\n    th {\r\n      text-align: left;\r\n      padding: 12px;\r\n      font-weight: 600;\r\n      color: #374151;\r\n    }\r\n  }\r\n\r\n  tbody {\r\n    td {\r\n      padding: 12px;\r\n      border-top: 1px solid #e5e7eb;\r\n    }\r\n\r\n    .overdue {\r\n      color: #dc2626;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`\r\nconst OverdueList = () => {\r\n  const { moveToList } = useCustomMove()\r\n\r\n  const [serverData, setServerData] = useState({ list: [] })\r\n  useEffect(() => {\r\n    //여기에서 비동기로 데이터를 받아올 수 있도록 코드를 작성해 주세요\r\n  }, [])\r\n\r\n  if (!serverData.list || serverData.list.length < 1)\r\n    return <h2>미납 데이터가 없습니다.</h2>\r\n  return (\r\n    <OverdueContainer>\r\n      <OverdueTable>\r\n        <thead>\r\n          <tr>\r\n            <th>도서명</th>\r\n            <th>저자</th>\r\n            <th>대여일</th>\r\n            <th>반납예정일</th>\r\n            <th>대여상태</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <Link to={'../1'}>클린 코드</Link>\r\n            </td>\r\n            <td>로버트 마틴</td>\r\n            <td>2025-06-01</td>\r\n            <td className=\"overdue\">2025-06-10</td>\r\n            <td className=\"overdue\">미납</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <Link to={'../1'}>모던 자바스크립트</Link>\r\n            </td>\r\n            <td>이호준</td>\r\n            <td>2025-06-02</td>\r\n            <td className=\"overdue\">2025-06-12</td>\r\n            <td className=\"overdue\">미납</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <Link to={'../1'}>코딩 인터뷰 완전분석</Link>\r\n            </td>\r\n            <td>게일 맥도웰</td>\r\n            <td>2025-05-28</td>\r\n            <td className=\"overdue\">2025-06-05</td>\r\n            <td className=\"overdue\">미납</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <Link to={'../1'}>파이썬 완전정복</Link>\r\n            </td>\r\n            <td>윤인성</td>\r\n            <td>2025-06-03</td>\r\n            <td className=\"overdue\">2025-06-13</td>\r\n            <td className=\"overdue\">미납</td>\r\n          </tr>\r\n        </tbody>\r\n      </OverdueTable>\r\n\r\n      <Pagination serverData={serverData} movePage={moveToList} />\r\n    </OverdueContainer>\r\n  )\r\n}\r\n\r\nexport default OverdueList\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","_ref","serverData","movePage","page","size","totalCount","totalPages","endPage","Math","ceil","startPage","realEndPage","pageNumList","i","prev","next","_jsxs","children","_jsx","onClick","map","pageNum","idx","type","style","color","concat","useCustomMove","getNum","strNum","defaultValue","parseInt","searchParam","useSearchParams","get","queryDefault","createSearchParams","toString","navigate","useNavigate","queryString","setRefresh","useState","moveToList","pageParam","sizeNum","pathname","search","moveToRead","bookId","OverdueContainer","OverdueTable","table","_templateObject2","OverdueList","setServerData","list","useEffect","length","Link","to","className","Pagination"],"sourceRoot":""}