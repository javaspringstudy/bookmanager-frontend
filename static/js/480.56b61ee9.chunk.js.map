{"version":3,"file":"static/js/480.56b61ee9.chunk.js","mappings":"2NAMA,MAAMA,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8pBAyGhC,EAlEmBC,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,EAAUC,IAASC,EAAAA,EAAAA,GAAU,CACxCC,KAAM,QACNC,QAAS,MAGL,KAAED,EAAI,QAAEC,GAAYL,GAE1BM,EAAAA,EAAAA,WAAU,OAGP,CAACN,IAEJ,MAAMO,GAAaC,EAAAA,EAAAA,WACZC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAwBrC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACP,OAAQA,EAAQQ,YAxBPA,KAClBP,GAAU,GACVH,EAAWW,QAAQC,SAsBgCC,MAAM,2BAAMN,SAAC,uFAG9DC,EAAAA,EAAAA,KAACvB,EAAa,CAAAsB,UACZF,EAAAA,EAAAA,MAAA,QAAMS,SAvBMC,IAEhB,GADAA,EAAEC,kBACGlB,EAAQmB,OAKX,OAHAd,GAAU,QAEVH,EAAWW,QAAQC,QAIrB,MAAMM,GAAcC,EAAAA,EAAAA,IAAmB,CAAEtB,OAAMC,YAAWsB,WAC1DC,QAAQC,IAAI,iBAADC,OAAkBL,IAC7B3B,EAAS,eAADgC,OAAgBL,IAExBvB,KAS6BY,SAAA,EACvBF,EAAAA,EAAAA,MAAA,UAAQmB,KAAK,OAAO9B,SAAUA,EAAU+B,MAAO5B,EAAKU,SAAA,EAClDC,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,QAAOlB,SAAC,wBACtBC,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,SAAQlB,SAAC,2BAEzBC,EAAAA,EAAAA,KAAA,SACEX,KAAK,OACL2B,KAAK,UACLC,MAAO3B,EACP4B,YAAY,0DACZhC,SAAUA,EACViC,IAAK3B,EACL4B,aAAa,SAEfpB,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,yB,sDCtGlB,MAkBA,EAlBmBsB,IACjB,MAAOpC,EAAMqC,IAAW1B,EAAAA,EAAAA,UAASyB,GAcjC,MAAO,CAACpC,EAZUsB,IAChB,MAAM,KAAES,EAAI,MAAEC,GAAUV,EAAEgB,OAC1BD,EAASE,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRD,GAAI,IACP,CAACR,GAAOC,MAIE9B,KACZmC,EAAQD,K,oECZZ,MAAMK,EAAiBhD,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wsCAY5B8C,GACDA,EAAMjC,OACF,IACAkC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAhD,EAAAA,EAAAA,GAAA,6CAsEX,EAfe8C,IACb,MAAM,OAAEjC,EAAM,YAAEQ,EAAW,MAAEG,EAAK,SAAEN,GAAa4B,EACjD,OACE3B,EAAAA,EAAAA,KAAC0B,EAAc,CAAChC,OAAQA,EAAOK,UAC7BF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASM,KACTL,EAAAA,EAAAA,KAAA,QAAAD,SAAOA,KACPC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQ8B,QAAS5B,EAAYH,SAAC,iB","sources":["pages/search/SearchForm.jsx","hooks/useInputs.js","components/Modal.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport useInputs from '../../hooks/useInputs'\r\nimport Modal from '../../components/Modal'\r\nimport { createSearchParams, useNavigate } from 'react-router-dom'\r\n\r\nconst FormContainer = styled.div`\r\n  background-color: white;\r\n  padding: 16px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\r\n  > form {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n\r\n    > select {\r\n      padding: 8px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    > input {\r\n      flex: 1;\r\n      padding: 8px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    > button {\r\n      padding: 8px 16px;\r\n      background-color: #3b82f6;\r\n      border: none;\r\n      color: white;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: #2563eb;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst SearchForm = () => {\r\n  const navigate = useNavigate()\r\n  const [form, onChange, reset] = useInputs({\r\n    type: 'title',\r\n    keyword: '',\r\n  })\r\n\r\n  const { type, keyword } = form\r\n\r\n  useEffect(() => {\r\n    //React는 상태를 비동기적으로 처리하기 때문에 로그확인은 useEffect에서 하는게 정확하다.\r\n    //console.log('form =', form)\r\n  }, [form])\r\n\r\n  const keywordRef = useRef()\r\n  const [isOpen, setIsOpen] = useState(false) //모달창 열고 닫는 변수\r\n\r\n  const clseModalFn = () => {\r\n    setIsOpen(false)\r\n    keywordRef.current.focus()\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!keyword.trim()) {\r\n      // alert('검색어가 입력되지 않았습니다.')\r\n      setIsOpen(true) //모달창 열기\r\n\r\n      keywordRef.current.focus()\r\n      return\r\n    }\r\n\r\n    const queryString = createSearchParams({ type, keyword }).toString()\r\n    console.log(`queryString = ${queryString}`)\r\n    navigate(`/searchbook?${queryString}`)\r\n\r\n    reset()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} clseModalFn={clseModalFn} title=\"입력오류\">\r\n        검색어가 입력되지 않았습니다.\r\n      </Modal>\r\n      <FormContainer>\r\n        <form onSubmit={onSubmit}>\r\n          <select name=\"type\" onChange={onChange} value={type}>\r\n            <option value=\"title\">도서명</option>\r\n            <option value=\"author\">저자명</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            name=\"keyword\"\r\n            value={keyword}\r\n            placeholder=\"검색어를 입력하세요\"\r\n            onChange={onChange}\r\n            ref={keywordRef}\r\n            autoComplete=\"off\"\r\n          />\r\n          <button>검색</button>\r\n        </form>\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import { useState } from 'react'\r\n\r\nconst useInputs = (initialData) => {\r\n  const [form, setForm] = useState(initialData)\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target\r\n    setForm((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const reset = () => {\r\n    setForm(initialData)\r\n  }\r\n\r\n  return [form, onChange, reset]\r\n}\r\n\r\nexport default useInputs\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst ModalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 99;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  ${(props) =>\r\n    props.isOpen\r\n      ? ''\r\n      : css`\r\n          display: none;\r\n        `}\r\n\r\n  >section {\r\n    overflow: hidden;\r\n    width: 90%;\r\n    max-width: 450px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-radius: 0.3rem;\r\n    animation-duration: 0.25s;\r\n    animation-timing-function: ease-out;\r\n    animation-name: slideUp;\r\n    animation-fill-mode: forwards;\r\n\r\n    > header {\r\n      position: relative;\r\n      padding: 16px 64px;\r\n      background-color: #f1f1f1;\r\n      font-weight: 700;\r\n    }\r\n\r\n    > main {\r\n      padding: 16px;\r\n      border-bottom: 1px solid #dee2e6;\r\n      border-top: 1px solid #dee2e6;\r\n    }\r\n\r\n    > footer {\r\n      padding: 12px 16px;\r\n      text-align: right;\r\n\r\n      > button {\r\n        outline: none;\r\n        cursor: pointer;\r\n        border: 0;\r\n        margin: 0 auto;\r\n        padding: 6px 12px;\r\n        color: #fff;\r\n        background-color: #6c757d;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    outline: none;\r\n    cursor: pointer;\r\n    border: 0;\r\n  }\r\n`\r\n\r\nconst Modal = (props) => {\r\n  const { isOpen, clseModalFn, title, children } = props\r\n  return (\r\n    <ModalContainer isOpen={isOpen}>\r\n      <section>\r\n        <header>{title}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          <button onClick={clseModalFn}>close</button>\r\n        </footer>\r\n      </section>\r\n    </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n"],"names":["FormContainer","styled","div","_templateObject","_taggedTemplateLiteral","SearchForm","navigate","useNavigate","form","onChange","reset","useInputs","type","keyword","useEffect","keywordRef","useRef","isOpen","setIsOpen","useState","_jsxs","_Fragment","children","_jsx","Modal","clseModalFn","current","focus","title","onSubmit","e","preventDefault","trim","queryString","createSearchParams","toString","console","log","concat","name","value","placeholder","ref","autoComplete","initialData","setForm","target","prev","_objectSpread","ModalContainer","props","css","_templateObject2","onClick"],"sourceRoot":""}