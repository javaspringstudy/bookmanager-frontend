{"version":3,"file":"static/js/50.3faa8cba.chunk.js","mappings":"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","sources":["components/common/Pagination.jsx","hooks/useCustomMove.js","pages/rental/RentalList.jsx"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  margin-top: 32px;\r\n\r\n  button {\r\n    padding: 8px 14px;\r\n    background-color: white;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n\r\n    &:first-child {\r\n      color: white !important;\r\n      font-weight: bold;\r\n      background-color: #3b82f6;\r\n    }\r\n\r\n    &:hover {\r\n      color: white !important;\r\n      background-color: #3b82f6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Pagination = ({ serverData, movePage }) => {\r\n  // console.log('serverData=', serverData)\r\n  let { page, size, totalCount, totalPages } = serverData\r\n\r\n  let endPage = Math.ceil((page + 1) / 10) * 10 // 페이지네이션 끝번호\r\n  const startPage = endPage - 10 + 1 // 페이지네이션 시작번호\r\n  const realEndPage = Math.ceil(totalCount / size)\r\n\r\n  // 페이지네이션 끝번호 재계산\r\n  if (realEndPage < endPage) {\r\n    endPage = realEndPage\r\n  }\r\n\r\n  const pageNumList = []\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageNumList[i - 1] = i\r\n  }\r\n\r\n  const prev = startPage > 10 ? true : false\r\n  const next = endPage < realEndPage ? true : false\r\n\r\n  return (\r\n    <Container>\r\n      {prev ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: startPage - 1,\r\n              size,\r\n            })\r\n          }\r\n        >\r\n          Prev\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {pageNumList.map((pageNum, idx) => (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => movePage({ page: pageNum, size })}\r\n          key={idx}\r\n          style={{\r\n            color: `${page + 1 === pageNum ? 'red' : 'black'}`,\r\n          }}\r\n        >\r\n          {pageNum}\r\n        </button>\r\n      ))}\r\n\r\n      {next ? (\r\n        <span\r\n          onClick={() =>\r\n            movePage({\r\n              page: endPage + 1,\r\n              size: size,\r\n            })\r\n          }\r\n        >\r\n          Next\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import { useState } from 'react'\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from 'react-router-dom'\r\n\r\nconst useCustomMove = () => {\r\n  //문자열을 정수로 변환\r\n  const getNum = (strNum, defaultValue) => {\r\n    if (!strNum) return defaultValue\r\n    return parseInt(strNum)\r\n  }\r\n\r\n  const [searchParam] = useSearchParams()\r\n  const page = getNum(searchParam.get('page'), 1)\r\n  const size = getNum(searchParam.get('size'), 10)\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n  const navigate = useNavigate()\r\n  let queryString = ''\r\n\r\n  //현재페이지번호를 클릭해도 서버에 데이터를 요청하기 위한 상태변수\r\n  const [setRefresh] = useState(false)\r\n\r\n  const moveToList = (pageParam) => {\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n      queryString = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString()\r\n    } else {\r\n      navigate({ pathname: '../search' })\r\n      //../search는 현재 경로에서 한 디렉터리 위로 올라간 다음 list로 이동하는 의미. 결과: /books/search\r\n    }\r\n    setRefresh((prev) => !prev)\r\n    navigate({ pathname: '../search', search: queryString })\r\n  }\r\n\r\n  const moveToRead = (bookId) => {\r\n    navigate({ pathname: `../info/${bookId}`, search: queryDefault })\r\n  }\r\n\r\n  // console.log('page=', page)\r\n  // console.log('size=', size)\r\n\r\n  return { moveToList, moveToRead, page, size }\r\n}\r\n\r\nexport default useCustomMove\r\n","import styled from 'styled-components'\r\nimport useCustomLogin from '../../hooks/useCustomLogin'\r\nimport { useEffect, useState } from 'react'\r\nimport useCustomMove from '../../hooks/useCustomMove'\r\nimport Pagination from '../../components/common/Pagination'\r\n\r\nconst RentalContainer = styled.div`\r\n  margin-top: 2rem;\r\n`\r\n\r\nconst FilterBox = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 1rem;\r\n\r\n  select {\r\n    padding: 0.5rem 1rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n`\r\n\r\nconst RentalTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n\r\n  thead {\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    text-align: left;\r\n  }\r\n\r\n  .text-red {\r\n    color: #ef4444;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .text-green {\r\n    color: #10b981;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .text-gray {\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst CancelButton = styled.button`\r\n  display: inline-block;\r\n  margin-left: 0.5rem;\r\n  background-color: #ef4444;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  font-size: 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dc2626;\r\n  }\r\n`\r\n\r\nconst RentalList = () => {\r\n  const { moveToList } = useCustomMove()\r\n  const [serverData, setServerData] = useState({ list: [] })\r\n\r\n  useEffect(() => {\r\n    //여기에서 비동기로 데이터를 받아올 수 있도록 코드를 작성해 주세요\r\n  }, [])\r\n\r\n  if (!serverData.list || serverData.list.length < 1) {\r\n    return <h2>대여 데이터가 없습니다.</h2>\r\n  }\r\n  return (\r\n    <RentalContainer>\r\n      <FilterBox>\r\n        <select>\r\n          <option value=\"\">전체보기</option>\r\n          <option value=\"대여요청\">대여요청</option>\r\n          <option value=\"대여중\">대여중</option>\r\n          <option value=\"반납완료\">반납완료</option>\r\n          <option value=\"미납\">미납</option>\r\n        </select>\r\n      </FilterBox>\r\n\r\n      <RentalTable>\r\n        <thead>\r\n          <tr>\r\n            <th>도서명</th>\r\n            <th>저자</th>\r\n            <th>대여일</th>\r\n            <th>반납예정일</th>\r\n            <th>상태</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {serverData.list.map((book, i) => (\r\n            <tr key={i}>\r\n              <td>{book.title}</td>\r\n              <td>{book.author}</td>\r\n              <td>{book.rentDate}</td>\r\n              <td>{book.returnDate}</td>\r\n              <td\r\n                className={\r\n                  book.status === '미납'\r\n                    ? 'text-red'\r\n                    : book.status === '대여중'\r\n                      ? 'text-green'\r\n                      : 'text-gray'\r\n                }\r\n              >\r\n                {book.status === '대여요청' ? (\r\n                  <>\r\n                    <span>{book.status}</span>\r\n                    <CancelButton>취소</CancelButton>\r\n                  </>\r\n                ) : (\r\n                  <span>{book.status}</span>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </RentalTable>\r\n\r\n      <Pagination serverData={serverData} movePage={moveToList} />\r\n    </RentalContainer>\r\n  )\r\n}\r\n\r\nexport default RentalList\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","_ref","serverData","movePage","page","size","totalCount","totalPages","endPage","Math","ceil","startPage","realEndPage","pageNumList","i","prev","next","_jsxs","children","_jsx","onClick","map","pageNum","idx","type","style","color","concat","useCustomMove","getNum","strNum","defaultValue","parseInt","searchParam","useSearchParams","get","queryDefault","createSearchParams","toString","navigate","useNavigate","queryString","setRefresh","useState","moveToList","pageParam","sizeNum","pathname","search","moveToRead","bookId","RentalContainer","FilterBox","_templateObject2","RentalTable","table","_templateObject3","CancelButton","button","_templateObject4","RentalList","setServerData","list","useEffect","length","value","book","title","author","rentDate","returnDate","className","status","_Fragment","Pagination"],"sourceRoot":""}